/*
 * ------------------------------------------------------------
 * IMPORTANT: The contents of this file are auto-generated.
 *
 * This file may be updated by the Shopify admin theme editor
 * or related systems. Please exercise caution as any changes
 * made to this file may be overwritten.
 * ------------------------------------------------------------
 */
{
  "sections": {
    "main": {
      "type": "main-product",
      "blocks": {
        "action_cTLVRE": {
          "type": "action",
          "settings": {
            "content": "Content",
            "alignment": "left"
          }
        }
      },
      "block_order": [
        "action_cTLVRE"
      ],
      "disabled": true,
      "settings": {}
    },
    "custom_liquid_Ujwa4i": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "Product details Section",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details open>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.description }}</div>\n          </details>\n          {% if product.metafields.custom.key_ingredients != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.key_ingredients | metafield_tag }}</div>\n            </details>\n          {% endif %}\n          {% if product.metafields.custom.how_to_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.how_to_use | metafield_tag }}</div>\n            </details>\n          {% endif %}\n          {% if product.metafields.custom.full_ingredients != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.full_ingredients | metafield_tag }}</div>\n            </details>\n          {% endif %}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>"
      }
    },
    "custom_liquid_Xamj8B": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "complete product details + tabs",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details\n\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n\n              {{ product.metafields.custom.direction_of_use | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>"
      }
    },
    "custom_liquid_mxDNK7": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details\n\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n\n              {{ product.metafields.custom.direction_of_use | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>"
      }
    },
    "custom_liquid_CpjjLw": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "almost complete - img slider not working",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n/* ====== Layout to match the screenshot (rows) ====== */\n.recommended-products {\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 22px !important;\n  margin: 20px 0 40px;\n}\n\n/* Each row */\n.recommended-product {\n  display: grid !important;\n  grid-template-columns: 84px 1fr;\n  gap: 16px;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 16px;\n}\n\n/* Left image */\n.recommended-product .image-wrapper {\n  width: 84px;\n  height: 84px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n.recommended-product .image-wrapper img {\n  width: 72px;\n  height: 72px;\n  object-fit: contain;\n}\n\n/* Middle: series, title, variant dropdown */\n.rp-middle {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.rp-series {\n  font-family: 'Canela-bold', serif;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.rp-title {\n  font-size: 15px;\n  line-height: 1.4;\n  margin: 0;\n}\n\n.rp-form { /* this is the actual <form> inside <product-form> */\n  display: flex !important;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n}\n\n/* Keep original radios (for theme JS), but hide them */\n.rp-form .variant-radios {\n  display: none !important;\n}\n\n/* Dropdown look (like your screenshot) */\n.rp-form .variant-select {\n  min-width: 120px;\n  padding: 6px 28px 6px 10px;\n  border: 1px solid #000;\n  border-radius: 0px;\n  background: #fff;\n  appearance: none;\n  position: relative;\n}\n\n/* Add-to-cart button on the right with price inside */\n.rp-form .add-to-cart {\n  margin-left: auto;\n  background: #222;\n  color: #fff;\n  border: 0;\n  padding: 9px 16px;\n  font-size: 14px;\n  border-radius: 0px;\n  cursor: pointer;\n  white-space: nowrap;\nwidth:6rem;\n}\n.rp-form .add-to-cart[disabled] { background: grey; }\n\n/* Hide the old standalone price line (we keep it for JS/compat) */\n.product-price { display: none; }\n\n@media (max-width: 640px) {\n  .recommended-product {\n    grid-template-columns: 64px 1fr;\n  }\n  .recommended-product .image-wrapper { width: 64px; height: 64px; }\n  .recommended-product .image-wrapper img { width: 56px; height: 56px; }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details\n\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n\n              {{ product.metafields.custom.direction_of_use | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n\n\n\n\n\n\n\n\n\n{% assign related_tags = product.metafields.custom.related_tags | split: \",\" %}\n{% assign recommended_products = \"\" %}\n\n{% for tag in related_tags %}\n  {% for product in collections.all.products %}\n    {% if product.tags contains tag %}\n      {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n  <h3 style=\"margin-bottom: 12px; margin-top:20px;\">Pairs well with:</h3>\n\n  <div class=\"recommended-products\">\n    {% for handle in recommended_products limit: 6 %}\n      {% assign product = all_products[handle] %}\n      <div class=\"recommended-product\">\n\n        <!-- LEFT: product image -->\n        <div class=\"image-wrapper\">\n          {% if product.featured_image %}\n            <img src=\"{{ product.featured_image | img_url: '150x' }}\" alt=\"{{ product.title }}\">\n          {% endif %}\n        </div>\n\n        <!-- RIGHT: content (series + title + form with dropdown & button) -->\n        <div class=\"rp-middle\">\n          {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n            <div class=\"rp-series\">{{ product.metafields.custom.series.value.letter }}-{{ product.metafields.custom.series_number }}</div>\n          {% endif %}\n          <p class=\"rp-title\">{{ product.title }}</p>\n\n          <!-- IMPORTANT: Keep your original product form EXACTLY so AJAX + drawer work -->\n          <product-form>\n            {%- form 'product',\n              product,\n              id: stickyATCCTAFormID,\n              class: 'form rp-form',\n              novalidate: 'novalidate',\n              data-type: 'add-to-cart-form'\n            -%}\n              <!-- Hidden variant id (Shopify requires this) -->\n              <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n              <!-- Keep ORIGINAL radios (hidden) so any theme JS stays happy -->\n              <div class=\"variant-radios\" style=\"accent-color:#000;\">\n                {% for variant in product.variants %}\n                  <input\n                    type=\"radio\"\n                    id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                    name=\"variant-{{ product.id }}\"\n                    value=\"{{ variant.id }}\"\n                    {% if forloop.first %}checked{% endif %}\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    onchange=\"updateVariant({{ product.id }}, this)\">\n                  <label for=\"variant-{{ product.id }}-{{ variant.id }}\">{{ variant.title }}</label>\n                {% endfor %}\n              </div>\n\n              <!-- Visible dropdown that syncs with the radios above -->\n              <select class=\"variant-select\" onchange=\"syncSelectToRadios({{ product.id }}, this)\">\n                {% for variant in product.variants %}\n                  <option\n                    value=\"{{ variant.id }}\"\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    {% if forloop.first %}selected{% endif %}>\n                    {{ variant.title }}\n                  </option>\n                {% endfor %}\n              </select>\n\n              <!-- Keep price node for your original JS (hidden via CSS) -->\n              <p id=\"product-price-{{ product.id }}\" class=\"product-price\">\n                {{ product.variants.first.price | money }}\n              </p>\n\n              <!-- The SAME button/classes you had: AJAX add + opens drawer -->\n              <button type=\"submit\"\n                      id=\"add-to-cart-btn-{{ product.id }}\"\n                      class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                      data-open-drawer=\"true\"\n                      {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}>\n                Add - {{ product.variants.first.price | money }}\n              </button>\n            {%- endform -%}\n\n            <!-- Keep your original error wrapper -->\n            <div\n              class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n              role=\"alert\"\n              hidden>\n              <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              </svg>\n              <span class=\"product-form__error-message\"></span>\n            </div>\n          </product-form>\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n{% else %}\n  <p></p>\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>\n\n<script>\n/* Keep your original code — just add one helper to sync the dropdown to the radios */\n\n/* When dropdown changes, tick the corresponding (hidden) radio + reuse your original updateVariant() */\nfunction syncSelectToRadios(productId, selectEl) {\n  const variantId = selectEl.value;\n  const radio = document.getElementById(`variant-${productId}-${variantId}`);\n  if (radio) {\n    radio.checked = true;\n    // Reuse your existing logic (updates hidden input, price text, and button state)\n    updateVariant(productId, radio);\n  }\n}\n\n/* Your ORIGINAL script (unchanged) */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n  function updateButtonState(productId, selectedVariant) {\n    const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n    const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (!isAvailable) {\n      addToCartBtn.disabled = true;\n      addToCartBtn.textContent = \"Out of Stock\";\n      addToCartBtn.style.backgroundColor = \"grey\";\n    } else {\n      addToCartBtn.disabled = false;\n      addToCartBtn.textContent = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedVariant.getAttribute(\"data-price\") / 100);\n      addToCartBtn.style.backgroundColor = \"black\";\n    }\n  }\n\n  document.querySelectorAll('.recommended-product').forEach((productElement) => {\n    const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n    const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n    const variantIdInput = document.getElementById(`variant-id-${productId}`);\n    const productPrice = document.getElementById(`product-price-${productId}`);\n\n    if (defaultVariant) {\n      variantIdInput.value = defaultVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n      updateButtonState(productId, defaultVariant);\n\n      /* Also sync the visible dropdown to the default radio */\n      const selectEl = productElement.querySelector('select.variant-select');\n      if (selectEl) selectEl.value = defaultVariant.value;\n    }\n  });\n\n  variantOptions.forEach((option) => {\n    option.addEventListener(\"change\", function () {\n      const productId = this.name.split('-').pop();\n      const selectedVariant = this;\n      const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      variantIdInput.value = selectedVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedPrice / 100);\n      updateButtonState(productId, selectedVariant);\n\n      /* Keep dropdown in sync if user somehow changed radios */\n      const selectEl = document.querySelector(`.recommended-product select.variant-select[id=\"variant-${productId}\"]`) || document.querySelector(`.recommended-product select.variant-select`);\n      const middleWrap = selectedVariant.closest('.recommended-product');\n      if (middleWrap) {\n        const sel = middleWrap.querySelector('select.variant-select');\n        if (sel) sel.value = selectedVariant.value;\n      }\n    });\n  });\n});\n\n/* Your ORIGINAL function — unchanged */\nfunction updateVariant(productId, inputElement) {\n  let variantId = inputElement.value;\n  let variantPrice = inputElement.getAttribute(\"data-price\");\n  let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n  document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n  document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  }).format(variantPrice / 100);\n\n  let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n  if (available) {\n    button.disabled = false;\n    button.innerText = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(variantPrice / 100);\n    button.style.backgroundColor = \"black\";\n  } else {\n    button.disabled = true;\n    button.innerText = \"Out of Stock\";\n    button.style.backgroundColor = \"grey\";\n  }\n}\n</script>"
      }
    },
    "custom_liquid_Radtzf": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "almost complete - prices not showing",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n/* ====== Layout to match the screenshot (rows) ====== */\n.recommended-products1 {\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 22px !important;\n  margin: 20px 0 40px;\n}\n\n/* Each row */\n.recommended-product1 {\n  display: grid !important;\n  grid-template-columns: 84px 1fr;\n  gap: 16px;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 16px;\n}\n\n/* Left image */\n.recommended-product1 .image-wrapper1 {\n  width: 84px;\n  height: 84px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n.recommended-product1 .image-wrapper1 img {\n  width: 72px;\n  height: 72px;\n  object-fit: contain;\n}\n\n/* Middle: series, title, variant dropdown */\n.rp-middle {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.rp-series {\n  font-family: 'Canela-bold', serif;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.rp-title {\n  font-size: 15px;\n  line-height: 1.4;\n  margin: 0;\n}\n\n.rp-form { /* this is the actual <form> inside <product-form> */\n  display: flex !important;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n}\n\n/* Keep original radios (for theme JS), but hide them */\n.rp-form .variant-radios {\n  display: none !important;\n}\n\n/* Dropdown look (like your screenshot) */\n.rp-form .variant-select {\n  min-width: 120px;\n  padding: 6px 28px 6px 10px;\n  border: 1px solid #000;\n  border-radius: 0px;\n  background: #fff;\n  appearance: none;\n  position: relative;\n}\n\n/* Add-to-cart button on the right with price inside */\n.rp-form .add-to-cart {\n  margin-left: auto;\n  background: #222;\n  color: #fff;\n  border: 0;\n  padding: 9px 16px;\n  font-size: 14px;\n  border-radius: 0px;\n  cursor: pointer;\n  white-space: nowrap;\nwidth:6rem;\n}\n.rp-form .add-to-cart[disabled] { background: grey; }\n\n/* Hide the old standalone price line (we keep it for JS/compat) */\n.product-price { display: none; }\n\n@media (max-width: 640px) {\n  .recommended-product {\n    grid-template-columns: 64px 1fr;\n  }\n  .recommended-product .image-wrapper { width: 64px; height: 64px; }\n  .recommended-product .image-wrapper img { width: 56px; height: 56px; }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details\n\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n\n              {{ product.metafields.custom.direction_of_use | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n\n\n\n\n\n\n\n\n\n{% assign related_tags = product.metafields.custom.related_tags | split: \",\" %}\n{% assign recommended_products = \"\" %}\n\n{% for tag in related_tags %}\n  {% for product in collections.all.products %}\n    {% if product.tags contains tag %}\n      {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n  <h3 style=\"margin-bottom: 12px; margin-top:20px;\">Pairs well with:</h3>\n\n  <div class=\"recommended-products1\">\n    {% for handle in recommended_products limit: 6 %}\n      {% assign product = all_products[handle] %}\n      <div class=\"recommended-product1\">\n\n        <!-- LEFT: product image -->\n        <div class=\"image-wrapper1\">\n          {% if product.featured_image %}\n            <img src=\"{{ product.featured_image | img_url: '150x' }}\" alt=\"{{ product.title }}\">\n          {% endif %}\n        </div>\n\n        <!-- RIGHT: content (series + title + form with dropdown & button) -->\n        <div class=\"rp-middle\">\n          {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n            <div class=\"rp-series\">{{ product.metafields.custom.series.value.letter }}-{{ product.metafields.custom.series_number }}</div>\n          {% endif %}\n          <p class=\"rp-title\">{{ product.title }}</p>\n\n          <!-- IMPORTANT: Keep your original product form EXACTLY so AJAX + drawer work -->\n          <product-form>\n            {%- form 'product',\n              product,\n              id: stickyATCCTAFormID,\n              class: 'form rp-form',\n              novalidate: 'novalidate',\n              data-type: 'add-to-cart-form'\n            -%}\n              <!-- Hidden variant id (Shopify requires this) -->\n              <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n              <!-- Keep ORIGINAL radios (hidden) so any theme JS stays happy -->\n              <div class=\"variant-radios\" style=\"accent-color:#000;\">\n                {% for variant in product.variants %}\n                  <input\n                    type=\"radio\"\n                    id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                    name=\"variant-{{ product.id }}\"\n                    value=\"{{ variant.id }}\"\n                    {% if forloop.first %}checked{% endif %}\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    onchange=\"updateVariant({{ product.id }}, this)\">\n                  <label for=\"variant-{{ product.id }}-{{ variant.id }}\">{{ variant.title }}</label>\n                {% endfor %}\n              </div>\n\n              <!-- Visible dropdown that syncs with the radios above -->\n              <select class=\"variant-select\" onchange=\"syncSelectToRadios({{ product.id }}, this)\">\n                {% for variant in product.variants %}\n                  <option\n                    value=\"{{ variant.id }}\"\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    {% if forloop.first %}selected{% endif %}>\n                    {{ variant.title }}\n                  </option>\n                {% endfor %}\n              </select>\n\n              <!-- Keep price node for your original JS (hidden via CSS) -->\n              <p id=\"product-price-{{ product.id }}\" class=\"product-price\">\n                {{ product.variants.first.price | money }}\n              </p>\n\n              <!-- The SAME button/classes you had: AJAX add + opens drawer -->\n              <button type=\"submit\"\n                      id=\"add-to-cart-btn-{{ product.id }}\"\n                      class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                      data-open-drawer=\"true\"\n                      {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}>\n                Add - {{ product.variants.first.price | money }}\n              </button>\n            {%- endform -%}\n\n            <!-- Keep your original error wrapper -->\n            <div\n              class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n              role=\"alert\"\n              hidden>\n              <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              </svg>\n              <span class=\"product-form__error-message\"></span>\n            </div>\n          </product-form>\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n{% else %}\n  <p></p>\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>\n\n<script>\n/* Keep your original code — just add one helper to sync the dropdown to the radios */\n\n/* When dropdown changes, tick the corresponding (hidden) radio + reuse your original updateVariant() */\nfunction syncSelectToRadios(productId, selectEl) {\n  const variantId = selectEl.value;\n  const radio = document.getElementById(`variant-${productId}-${variantId}`);\n  if (radio) {\n    radio.checked = true;\n    // Reuse your existing logic (updates hidden input, price text, and button state)\n    updateVariant(productId, radio);\n  }\n}\n\n/* Your ORIGINAL script (unchanged) */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n  function updateButtonState(productId, selectedVariant) {\n    const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n    const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (!isAvailable) {\n      addToCartBtn.disabled = true;\n      addToCartBtn.textContent = \"Out of Stock\";\n      addToCartBtn.style.backgroundColor = \"grey\";\n    } else {\n      addToCartBtn.disabled = false;\n      addToCartBtn.textContent = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedVariant.getAttribute(\"data-price\") / 100);\n      addToCartBtn.style.backgroundColor = \"black\";\n    }\n  }\n\n  document.querySelectorAll('.recommended-product').forEach((productElement) => {\n    const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n    const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n    const variantIdInput = document.getElementById(`variant-id-${productId}`);\n    const productPrice = document.getElementById(`product-price-${productId}`);\n\n    if (defaultVariant) {\n      variantIdInput.value = defaultVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n      updateButtonState(productId, defaultVariant);\n\n      /* Also sync the visible dropdown to the default radio */\n      const selectEl = productElement.querySelector('select.variant-select');\n      if (selectEl) selectEl.value = defaultVariant.value;\n    }\n  });\n\n  variantOptions.forEach((option) => {\n    option.addEventListener(\"change\", function () {\n      const productId = this.name.split('-').pop();\n      const selectedVariant = this;\n      const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      variantIdInput.value = selectedVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedPrice / 100);\n      updateButtonState(productId, selectedVariant);\n\n      /* Keep dropdown in sync if user somehow changed radios */\n      const selectEl = document.querySelector(`.recommended-product select.variant-select[id=\"variant-${productId}\"]`) || document.querySelector(`.recommended-product select.variant-select`);\n      const middleWrap = selectedVariant.closest('.recommended-product');\n      if (middleWrap) {\n        const sel = middleWrap.querySelector('select.variant-select');\n        if (sel) sel.value = selectedVariant.value;\n      }\n    });\n  });\n});\n\n/* Your ORIGINAL function — unchanged */\nfunction updateVariant(productId, inputElement) {\n  let variantId = inputElement.value;\n  let variantPrice = inputElement.getAttribute(\"data-price\");\n  let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n  document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n  document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  }).format(variantPrice / 100);\n\n  let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n  if (available) {\n    button.disabled = false;\n    button.innerText = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(variantPrice / 100);\n    button.style.backgroundColor = \"black\";\n  } else {\n    button.disabled = true;\n    button.innerText = \"Out of Stock\";\n    button.style.backgroundColor = \"grey\";\n  }\n}\n</script>"
      }
    },
    "custom_liquid_V3Www4": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "almost complete-slider not working",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n/* ====== Layout to match the screenshot (rows) ====== */\n.recommended-products1 {\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 22px !important;\n  margin: 20px 0 40px;\n}\n\n/* Each row */\n.recommended-product1 {\n  display: grid !important;\n  grid-template-columns: 84px 1fr;\n  gap: 16px;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 16px;\n}\n\n/* Left image */\n.recommended-product1 .image-wrapper1 {\n  width: 84px;\n  height: 84px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n.recommended-product1 .image-wrapper1 img {\n  width: 72px;\n  height: 72px;\n  object-fit: contain;\n}\n\n/* Middle: series, title, variant dropdown */\n.rp-middle {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.rp-series {\n  font-family: 'Canela-bold', serif;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.rp-title {\n  font-size: 15px;\n  line-height: 1.4;\n  margin: 0;\n}\n\n.rp-form { /* this is the actual <form> inside <product-form> */\n  display: flex !important;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n}\n\n/* Keep original radios (for theme JS), but hide them */\n.rp-form .variant-radios {\n  display: none !important;\n}\n\n/* Dropdown look (like your screenshot) */\n.rp-form .variant-select {\n  min-width: 120px;\n  padding: 6px 28px 6px 10px;\n  border: 1px solid #000;\n  border-radius: 0px;\n  background: #fff;\n  appearance: none;\n  position: relative;\n}\n\n/* Add-to-cart button on the right with price inside */\n.rp-form .add-to-cart {\n  margin-left: auto;\n  background: #222;\n  color: #fff;\n  border: 0;\n  padding: 9px 16px;\n  font-size: 14px;\n  border-radius: 0px;\n  cursor: pointer;\n  white-space: nowrap;\nwidth:6rem;\n}\n.rp-form .add-to-cart[disabled] { background: grey; }\n\n/* Hide the old standalone price line (we keep it for JS/compat) */\n\n\n@media (max-width: 640px) {\n  .recommended-product {\n    grid-template-columns: 64px 1fr;\n  }\n  .recommended-product .image-wrapper { width: 64px; height: 64px; }\n  .recommended-product .image-wrapper img { width: 56px; height: 56px; }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details\n\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n\n              {{ product.metafields.custom.direction_of_use | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n\n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n\n\n\n\n\n\n\n\n\n{% assign related_tags = product.metafields.custom.related_tags | split: \",\" %}\n{% assign recommended_products = \"\" %}\n\n{% for tag in related_tags %}\n  {% for product in collections.all.products %}\n    {% if product.tags contains tag %}\n      {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n  <h3 style=\"margin-bottom: 12px; margin-top:20px;\">Pairs well with:</h3>\n\n  <div class=\"recommended-products1\">\n    {% for handle in recommended_products limit: 6 %}\n      {% assign product = all_products[handle] %}\n      <div class=\"recommended-product1\">\n\n        <!-- LEFT: product image -->\n        <div class=\"image-wrapper1\">\n          {% if product.featured_image %}\n            <img src=\"{{ product.featured_image | img_url: '150x' }}\" alt=\"{{ product.title }}\">\n          {% endif %}\n        </div>\n\n        <!-- RIGHT: content (series + title + form with dropdown & button) -->\n        <div class=\"rp-middle\">\n          {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n            <div class=\"rp-series\">{{ product.metafields.custom.series.value.letter }}-{{ product.metafields.custom.series_number }}</div>\n          {% endif %}\n          <p class=\"rp-title\">{{ product.title }}</p>\n\n          <!-- IMPORTANT: Keep your original product form EXACTLY so AJAX + drawer work -->\n          <product-form>\n            {%- form 'product',\n              product,\n              id: stickyATCCTAFormID,\n              class: 'form rp-form',\n              novalidate: 'novalidate',\n              data-type: 'add-to-cart-form'\n            -%}\n              <!-- Hidden variant id (Shopify requires this) -->\n              <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n              <!-- Keep ORIGINAL radios (hidden) so any theme JS stays happy -->\n              <div class=\"variant-radios\" style=\"accent-color:#000;\">\n                {% for variant in product.variants %}\n                  <input\n                    type=\"radio\"\n                    id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                    name=\"variant-{{ product.id }}\"\n                    value=\"{{ variant.id }}\"\n                    {% if forloop.first %}checked{% endif %}\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    onchange=\"updateVariant({{ product.id }}, this)\">\n                  <label for=\"variant-{{ product.id }}-{{ variant.id }}\">{{ variant.title }}</label>\n                {% endfor %}\n              </div>\n\n              <!-- Visible dropdown that syncs with the radios above -->\n              <select class=\"variant-select\" onchange=\"syncSelectToRadios({{ product.id }}, this)\">\n                {% for variant in product.variants %}\n                  <option\n                    value=\"{{ variant.id }}\"\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    {% if forloop.first %}selected{% endif %}>\n                    {{ variant.title }}\n                  </option>\n                {% endfor %}\n              </select>\n\n              <!-- Keep price node for your original JS (hidden via CSS) -->\n              <p id=\"product-price-{{ product.id }}\" class=\"product-price\" style=\"display: none;\">\n                {{ product.variants.first.price | money }}\n              </p>\n\n              <!-- The SAME button/classes you had: AJAX add + opens drawer -->\n              <button type=\"submit\"\n                      id=\"add-to-cart-btn-{{ product.id }}\"\n                      class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                      data-open-drawer=\"true\"\n                      {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}>\n                Add - {{ product.variants.first.price | money }}\n              </button>\n            {%- endform -%}\n\n            <!-- Keep your original error wrapper -->\n            <div\n              class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n              role=\"alert\"\n              hidden>\n              <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              </svg>\n              <span class=\"product-form__error-message\"></span>\n            </div>\n          </product-form>\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n{% else %}\n  <p></p>\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>\n\n<script>\n/* Keep your original code — just add one helper to sync the dropdown to the radios */\n\n/* When dropdown changes, tick the corresponding (hidden) radio + reuse your original updateVariant() */\nfunction syncSelectToRadios(productId, selectEl) {\n  const variantId = selectEl.value;\n  const radio = document.getElementById(`variant-${productId}-${variantId}`);\n  if (radio) {\n    radio.checked = true;\n    // Reuse your existing logic (updates hidden input, price text, and button state)\n    updateVariant(productId, radio);\n  }\n}\n\n/* Your ORIGINAL script (unchanged) */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n  function updateButtonState(productId, selectedVariant) {\n    const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n    const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (!isAvailable) {\n      addToCartBtn.disabled = true;\n      addToCartBtn.textContent = \"Out of Stock\";\n      addToCartBtn.style.backgroundColor = \"grey\";\n    } else {\n      addToCartBtn.disabled = false;\n      addToCartBtn.textContent = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedVariant.getAttribute(\"data-price\") / 100);\n      addToCartBtn.style.backgroundColor = \"black\";\n    }\n  }\n\n  document.querySelectorAll('.recommended-product').forEach((productElement) => {\n    const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n    const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n    const variantIdInput = document.getElementById(`variant-id-${productId}`);\n    const productPrice = document.getElementById(`product-price-${productId}`);\n\n    if (defaultVariant) {\n      variantIdInput.value = defaultVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n      updateButtonState(productId, defaultVariant);\n\n      /* Also sync the visible dropdown to the default radio */\n      const selectEl = productElement.querySelector('select.variant-select');\n      if (selectEl) selectEl.value = defaultVariant.value;\n    }\n  });\n\n  variantOptions.forEach((option) => {\n    option.addEventListener(\"change\", function () {\n      const productId = this.name.split('-').pop();\n      const selectedVariant = this;\n      const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      variantIdInput.value = selectedVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedPrice / 100);\n      updateButtonState(productId, selectedVariant);\n\n      /* Keep dropdown in sync if user somehow changed radios */\n      const selectEl = document.querySelector(`.recommended-product select.variant-select[id=\"variant-${productId}\"]`) || document.querySelector(`.recommended-product select.variant-select`);\n      const middleWrap = selectedVariant.closest('.recommended-product');\n      if (middleWrap) {\n        const sel = middleWrap.querySelector('select.variant-select');\n        if (sel) sel.value = selectedVariant.value;\n      }\n    });\n  });\n});\n\n/* Your ORIGINAL function — unchanged */\nfunction updateVariant(productId, inputElement) {\n  let variantId = inputElement.value;\n  let variantPrice = inputElement.getAttribute(\"data-price\");\n  let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n  document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n  document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  }).format(variantPrice / 100);\n\n  let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n  if (available) {\n    button.disabled = false;\n    button.innerText = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(variantPrice / 100);\n    button.style.backgroundColor = \"black\";\n  } else {\n    button.disabled = true;\n    button.innerText = \"Out of Stock\";\n    button.style.backgroundColor = \"grey\";\n  }\n}\n</script>"
      }
    },
    "custom_liquid_zM4KjT": {
      "type": "custom-liquid",
      "name": "t:sections.custom-liquid.presets.name",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n/* ====== Layout to match the screenshot (rows) ====== */\n.recommended-products1 {\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 22px !important;\n  margin: 20px 0 40px;\n}\n\n/* Each row */\n.recommended-product1 {\n  display: grid !important;\n  grid-template-columns: 84px 1fr;\n  gap: 16px;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 16px;\n}\n\n/* Left image */\n.recommended-product1 .image-wrapper1 {\n  width: 84px;\n  height: 84px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n.recommended-product1 .image-wrapper1 img {\n  width: 72px;\n  height: 72px;\n  object-fit: contain;\n}\n\n/* Middle: series, title, variant dropdown */\n.rp-middle {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.rp-series {\n  font-family: 'Canela-bold', serif;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.rp-title {\n  font-size: 15px;\n  line-height: 1.4;\n  margin: 0;\n}\n\n.rp-form { /* this is the actual <form> inside <product-form> */\n  display: flex !important;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n}\n\n/* Keep original radios (for theme JS), but hide them */\n.rp-form .variant-radios {\n  display: none !important;\n}\n\n/* Dropdown look (like your screenshot) */\n.rp-form .variant-select {\n  min-width: 120px;\n  padding: 6px 28px 6px 10px;\n  border: 1px solid #000;\n  border-radius: 0px;\n  background: #fff;\n  appearance: none;\n  position: relative;\n}\n\n/* Add-to-cart button on the right with price inside */\n.rp-form .add-to-cart {\n  margin-left: auto;\n  background: #222;\n  color: #fff;\n  border: 0;\n  padding: 9px 16px;\n  font-size: 14px;\n  border-radius: 0px;\n  cursor: pointer;\n  white-space: nowrap;\nwidth:6rem;\n}\n.rp-form .add-to-cart[disabled] { background: grey; }\n\n/* Hide the old standalone price line (we keep it for JS/compat) */\n\n\n@media (max-width: 640px) {\n  .recommended-product {\n    grid-template-columns: 64px 1fr;\n  }\n  .recommended-product .image-wrapper { width: 64px; height: 64px; }\n  .recommended-product .image-wrapper img { width: 56px; height: 56px; }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n  .clp-accordion summary::after {\n    content: \"+\";\n    font-weight: bold;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\" onclick=\"moveSlide(-1)\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\" onclick=\"moveSlide(1)\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n        {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details>  <!-- FIX: closed properly -->\n\n\n\n          \n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n\n\n\n\n\n\n\n\n\n{% assign related_tags = product.metafields.custom.related_tags | split: \",\" %}\n{% assign recommended_products = \"\" %}\n\n{% for tag in related_tags %}\n  {% for product in collections.all.products %}\n    {% if product.tags contains tag %}\n      {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n  <h3 style=\"margin-bottom: 12px; margin-top:20px;\">Pairs well with:</h3>\n\n  <div class=\"recommended-products1\">\n    {% for handle in recommended_products limit: 6 %}\n      {% assign product = all_products[handle] %}\n      <div class=\"recommended-product1\">\n\n        <!-- LEFT: product image -->\n        <div class=\"image-wrapper1\">\n          {% if product.featured_image %}\n            <img src=\"{{ product.featured_image | img_url: '150x' }}\" alt=\"{{ product.title }}\">\n          {% endif %}\n        </div>\n\n        <!-- RIGHT: content (series + title + form with dropdown & button) -->\n        <div class=\"rp-middle\">\n          {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n            <div class=\"rp-series\">{{ product.metafields.custom.series.value.letter }}-{{ product.metafields.custom.series_number }}</div>\n          {% endif %}\n          <p class=\"rp-title\">{{ product.title }}</p>\n\n          <!-- IMPORTANT: Keep your original product form EXACTLY so AJAX + drawer work -->\n          <product-form>\n            {%- form 'product',\n              product,\n              id: stickyATCCTAFormID,\n              class: 'form rp-form',\n              novalidate: 'novalidate',\n              data-type: 'add-to-cart-form'\n            -%}\n              <!-- Hidden variant id (Shopify requires this) -->\n              <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n              <!-- Keep ORIGINAL radios (hidden) so any theme JS stays happy -->\n              <div class=\"variant-radios\" style=\"accent-color:#000;\">\n                {% for variant in product.variants %}\n                  <input\n                    type=\"radio\"\n                    id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                    name=\"variant-{{ product.id }}\"\n                    value=\"{{ variant.id }}\"\n                    {% if forloop.first %}checked{% endif %}\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    onchange=\"updateVariant({{ product.id }}, this)\">\n                  <label for=\"variant-{{ product.id }}-{{ variant.id }}\">{{ variant.title }}</label>\n                {% endfor %}\n              </div>\n\n              <!-- Visible dropdown that syncs with the radios above -->\n              <select class=\"variant-select\" onchange=\"syncSelectToRadios({{ product.id }}, this)\">\n                {% for variant in product.variants %}\n                  <option\n                    value=\"{{ variant.id }}\"\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    {% if forloop.first %}selected{% endif %}>\n                    {{ variant.title }}\n                  </option>\n                {% endfor %}\n              </select>\n\n              <!-- Keep price node for your original JS (hidden via CSS) -->\n              <p id=\"product-price-{{ product.id }}\" class=\"product-price\" style=\"display: none;\">\n                {{ product.variants.first.price | money }}\n              </p>\n\n              <!-- The SAME button/classes you had: AJAX add + opens drawer -->\n              <button type=\"submit\"\n                      id=\"add-to-cart-btn-{{ product.id }}\"\n                      class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                      data-open-drawer=\"true\"\n                      {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}>\n                Add - {{ product.variants.first.price | money }}\n              </button>\n            {%- endform -%}\n\n            <!-- Keep your original error wrapper -->\n            <div\n              class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n              role=\"alert\"\n              hidden>\n              <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              </svg>\n              <span class=\"product-form__error-message\"></span>\n            </div>\n          </product-form>\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n{% else %}\n  <p></p>\n{% endif %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>\n\n<script>\n/* Keep your original code — just add one helper to sync the dropdown to the radios */\n\n/* When dropdown changes, tick the corresponding (hidden) radio + reuse your original updateVariant() */\nfunction syncSelectToRadios(productId, selectEl) {\n  const variantId = selectEl.value;\n  const radio = document.getElementById(`variant-${productId}-${variantId}`);\n  if (radio) {\n    radio.checked = true;\n    // Reuse your existing logic (updates hidden input, price text, and button state)\n    updateVariant(productId, radio);\n  }\n}\n\n/* Your ORIGINAL script (unchanged) */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n  function updateButtonState(productId, selectedVariant) {\n    const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n    const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (!isAvailable) {\n      addToCartBtn.disabled = true;\n      addToCartBtn.textContent = \"Out of Stock\";\n      addToCartBtn.style.backgroundColor = \"grey\";\n    } else {\n      addToCartBtn.disabled = false;\n      addToCartBtn.textContent = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedVariant.getAttribute(\"data-price\") / 100);\n      addToCartBtn.style.backgroundColor = \"black\";\n    }\n  }\n\n  document.querySelectorAll('.recommended-product').forEach((productElement) => {\n    const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n    const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n    const variantIdInput = document.getElementById(`variant-id-${productId}`);\n    const productPrice = document.getElementById(`product-price-${productId}`);\n\n    if (defaultVariant) {\n      variantIdInput.value = defaultVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n      updateButtonState(productId, defaultVariant);\n\n      /* Also sync the visible dropdown to the default radio */\n      const selectEl = productElement.querySelector('select.variant-select');\n      if (selectEl) selectEl.value = defaultVariant.value;\n    }\n  });\n\n  variantOptions.forEach((option) => {\n    option.addEventListener(\"change\", function () {\n      const productId = this.name.split('-').pop();\n      const selectedVariant = this;\n      const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      variantIdInput.value = selectedVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedPrice / 100);\n      updateButtonState(productId, selectedVariant);\n\n      /* Keep dropdown in sync if user somehow changed radios */\n      const selectEl = document.querySelector(`.recommended-product select.variant-select[id=\"variant-${productId}\"]`) || document.querySelector(`.recommended-product select.variant-select`);\n      const middleWrap = selectedVariant.closest('.recommended-product');\n      if (middleWrap) {\n        const sel = middleWrap.querySelector('select.variant-select');\n        if (sel) sel.value = selectedVariant.value;\n      }\n    });\n  });\n});\n\n/* Your ORIGINAL function — unchanged */\nfunction updateVariant(productId, inputElement) {\n  let variantId = inputElement.value;\n  let variantPrice = inputElement.getAttribute(\"data-price\");\n  let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n  document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n  document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  }).format(variantPrice / 100);\n\n  let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n  if (available) {\n    button.disabled = false;\n    button.innerText = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(variantPrice / 100);\n    button.style.backgroundColor = \"black\";\n  } else {\n    button.disabled = true;\n    button.innerText = \"Out of Stock\";\n    button.style.backgroundColor = \"grey\";\n  }\n}\n</script>\n\n<!-- Slider: robust bindings (works even if inline onclick is blocked) -->\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const slider = document.getElementById('productSlider');\n  if (!slider) return;\n\n  const slides = Array.from(slider.querySelectorAll('.slide'));\n  const prevBtn = document.querySelector('.slider-btn.prev');\n  const nextBtn = document.querySelector('.slider-btn.next');\n  const thumbs = Array.from(document.querySelectorAll('#thumbnailRow .thumbnail'));\n  let current = 0;\n\n  function update() {\n    slider.style.transform = 'translateX(-' + (current * 100) + '%)';\n    // optional: keep thumbnails in sync\n    thumbs.forEach((t,i) => t.classList.toggle('is-active', i === current));\n    // pause other videos so audio doesn’t overlap\n    slides.forEach((s,i) => {\n      const v = s.querySelector('video');\n      if (v && i !== current) { try { v.pause(); } catch(e){} }\n    });\n  }\n  function goTo(i) {\n    if (!slides.length) return;\n    current = (i + slides.length) % slides.length;\n    update();\n  }\n  function moveBy(step) { goTo(current + step); }\n\n  // Bind clicks (works even if inline onclick is disabled by CSP)\n  prevBtn && prevBtn.addEventListener('click', e => { e.preventDefault(); moveBy(-1); });\n  nextBtn && nextBtn.addEventListener('click', e => { e.preventDefault(); moveBy(1); });\n  thumbs.forEach((t,i) => t.addEventListener('click', e => { e.preventDefault(); goTo(i); }));\n\n  // Expose in case inline handlers are allowed\n  window.moveSlide = moveBy;\n  window.goToSlide = goTo;\n\n  // Initialize\n  update();\n});\n</script>"
      }
    },
    "custom_liquid_iKHkqj": {
      "type": "custom-liquid",
      "name": "You may Also like",
      "settings": {
        "custom_liquid": "<style>\n.loading-overlay__spinner {\n  opacity: 1 !important;\n  visibility: visible !important;\n  display: block !important;\n}\n.product-tags {\n  margin: 15px 0 0 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.product-tag {\n  display: inline-block;\n  padding: 11px 10px 11px 5;\n  background: #f3f3f3;\n  color: #333;\n  border-radius: 4px;\n  font-size: 17px;\n  font-family: 'Utopia-Semibold' !important;\n}\n\n/* Specific tag styles */\n.product-tag.sale {\n  background: #ff4136;\n  color: white;\n}\n\n.product-tag.new {\n  background: #2ecc40;\n  color: white;\n}\n\n.product-tag.limited {\n  background: #ffdc00;\n  color: #111;\n}\n\n.p-title {\n  font-size: 1rem;\n  font-family: 'Utopia-Semibold' !important;\n  transition: text-decoration 0.3s;\n  text-transform: capitalize;\n  margin-bottom: 0px;\n  min-height: 2.5rem; /* Reserve space for ~2 lines of text */\n  display: -webkit-box;\n  -webkit-line-clamp: 2; /* Limit to 2 lines */\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.recommended-product:hover .p-title {\n  text-decoration: underline;\n  text-underline-offset: 2px;\n}\n\n.recommended-product:hover .product-tag {\n  text-decoration: underline;\n  text-underline-offset: 2px;\n}\n\n.recommended-products {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 23px 2px;\n  margin-bottom: 5rem;\n  margin-left: 2rem;\n  margin-right: 2rem;\n  align-items: stretch; /* Ensure all grid items stretch to equal height */\n}\n\n.recommended-product {\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  min-height: 350px; /* Original min-height */\n  height: 100%; /* Take full grid cell height */\n  text-align: center;\n  position: relative;\n}\n\n.recommended-product .image-wrapper {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n\n.recommended-product img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.recommended-product .hover-image {\n  opacity: 0;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  transition: top 0.5s ease-in-out, opacity 0.5s ease-in-out;\n}\n\n.recommended-product:hover .hover-image {\n  opacity: 1;\n  top: 0;\n}\n\n.recommended-product:hover .default-image {\n  opacity: 0;\n}\n\n.variant-options {\n  display: flex;\n  justify-content: left;\n  gap: 10px;\n  margin: 10px 0;\n  flex-wrap: wrap;\n}\n\n.variant-options input {\n  display: none;\n}\n\n.variant-options label {\n  padding: 5px 10px;\n  border: 1px solid #333;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.variant-options input:checked + label {\n  background-color: #333;\n  color: white;\n}\n\n.add-to-cart {\n  display: block;\n  width: 95%; /* Original width */\n  padding: 8px;\n  font-size: 14px;\n  background-color: #000;\n  color: white;\n  text-align: center;\n  cursor: pointer;\n  margin: 0px; /* Original margin */\n}\n\n.product-price {\n  font-weight: bold;\n  margin-top: 18px; /* Original margin */\n  font-size: 16px;\n}\n\n.product-form {\n  margin-top: 10px; /* Push form to the bottom */\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n@media (min-width: 769px) {\n  .recommended-products {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n@media (max-width: 768px) {\n  .recommended-products {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  .p-title{\n    display:block;\n    min-height:5rem;\n  }\n}\n</style>\n\n{% assign related_tags = product.metafields.custom.related_tags | split: \",\" %}\n{% assign recommended_products = \"\" %}\n\n{% for tag in related_tags %}\n    {% for product in collections.all.products %}\n        {% if product.tags contains tag %}\n            {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n        {% endif %}\n    {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n    <h2 style=\"text-align:center; margin-bottom: 2rem; font-size:30px;\">You may also like</h2>\n    <div class=\"recommended-products\">\n        {% for handle in recommended_products limit: 6 %}\n            {% assign product = all_products[handle] %}\n            <div class=\"recommended-product\">\n                <a href=\"{{ product.url }}\">\n                    {% assign first_image = product.images[0] %}\n                    {% assign second_image = product.images[1] %}\n                    <div class=\"image-wrapper\">\n                        <img src=\"{{ first_image | img_url: 'large' }}\" alt=\"{{ product.title }}\" class=\"default-image\">\n                        {% if second_image %}\n                            <img src=\"{{ second_image | img_url: 'large' }}\" alt=\"{{ product.title }}\" class=\"hover-image\">\n                        {% endif %}\n                    </div>\n                </a>\n\n\n\n                {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n                    <span style=\"font-family: 'Canela-bold'; margin-top:6px; margin-bottom:6px;\" class=\"heading-sm font-bold leading-none product-tag\">\n                        {{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}\n                    </span>\n                {% endif %}\n\n                <a href=\"{{ product.url }}\">\n                    <p class=\"p-title\">{{ product.title | capitalize }}</p>\n                </a>\n\n                <product-form class=\"product-form\">\n                    {%- form 'product',\n                        product,\n                        id: stickyATCCTAFormID,\n                        class: 'form',\n                        novalidate: 'novalidate',\n                        data-type: 'add-to-cart-form'\n                    -%}\n                        <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n                        <div style=\"accent-color: #000;\">\n                            {% for variant in product.variants %}\n                                <input type=\"radio\"\n                                       id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                                       name=\"variant-{{ product.id }}\"\n                                       value=\"{{ variant.id }}\"\n                                       {% if forloop.first %} checked {% endif %}\n                                       data-price=\"{{ variant.price }}\"\n                                       data-available=\"{{ variant.available }}\"\n                                       onchange=\"updateVariant({{ product.id }}, this)\">\n                                <label for=\"variant-{{ product.id }}-{{ variant.id }}\" style=\"margin-right:5px\">{{ variant.title }}</label>\n                            {% endfor %}\n                        </div>\n\n                        <p id=\"product-price-{{ product.id }}\" class=\"product-price\">\n                            {{ product.variants.first.price | money }}\n                        </p>\n\n                        <button type=\"submit\"\n                                {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}\n                                class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                                id=\"add-to-cart-btn-{{ product.id }}\">\n                            {% if product.variants.first.available %}\n                                Add to Cart\n                            {% else %}\n                                Out of Stock\n                            {% endif %}\n                        </button>\n                    {%- endform -%}\n\n                    <div\n                        class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n                        role=\"alert\"\n                        hidden\n                    >\n                        <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                            <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                            <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                            <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                            <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                        </svg>\n                        <span class=\"product-form__error-message\"></span>\n                    </div>\n                </product-form>\n            </div>\n        {% endfor %}\n    </div>\n{% else %}\n    <p>.</p>\n{% endif %}\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n    function updateButtonState(productId, selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n      if (!isAvailable) {\n        addToCartBtn.disabled = true;\n        addToCartBtn.textContent = \"Out of Stock\";\n        addToCartBtn.style.backgroundColor = \"grey\";\n      } else {\n        addToCartBtn.disabled = false;\n        addToCartBtn.textContent = \"Add to Cart\";\n        addToCartBtn.style.backgroundColor = \"black\";\n      }\n    }\n\n    // Initialize each product's default variant\n    document.querySelectorAll('.recommended-product').forEach((productElement) => {\n      const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n      const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = new Intl.NumberFormat('en-GB', {\n          style: 'currency',\n          currency: 'GBP'\n        }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n        updateButtonState(productId, defaultVariant);\n      }\n    });\n\n    // Handle variant changes\n    variantOptions.forEach((option) => {\n      option.addEventListener(\"change\", function () {\n        const productId = this.name.split('-').pop();\n        const selectedVariant = this;\n        const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n        const variantIdInput = document.getElementById(`variant-id-${productId}`);\n        const productPrice = document.getElementById(`product-price-${productId}`);\n\n        variantIdInput.value = selectedVariant.value;\n        productPrice.textContent = new Intl.NumberFormat('en-GB', {\n          style: 'currency',\n          currency: 'GBP'\n        }).format(selectedPrice / 100);\n        updateButtonState(productId, selectedVariant);\n        console.log(`Product ID: ${productId}, Variant ID: ${selectedVariant.value}, Price: ${selectedPrice}`);\n      });\n    });\n  });\n\n  function updateVariant(productId, inputElement) {\n    let variantId = inputElement.value;\n    let variantPrice = inputElement.getAttribute(\"data-price\");\n    let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n    document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n    document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency: 'GBP'\n    }).format(variantPrice / 100);\n\n    let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (available) {\n      button.disabled = false;\n      button.innerText = \"Add to Cart\";\n      button.style.backgroundColor = \"black\";\n    } else {\n      button.disabled = true;\n      button.innerText = \"Out of Stock\";\n      button.style.backgroundColor = \"grey\";\n    }\n  }\n</script>"
      }
    },
    "custom_liquid_tnez4r": {
      "type": "custom-liquid",
      "disabled": true,
      "name": "pro sec complete only some responsive issues backup from newd",
      "settings": {
        "custom_liquid": "{%- assign current_variant = product.selected_or_first_available_variant -%}\n\n<style>\n/* ====== Layout to match the screenshot (rows) ====== */\n.recommended-products1 {\n  display: flex !important;\n  flex-direction: column !important;\n  gap: 22px !important;\n  margin: 20px 0 40px;\n}\n\n/* Each row */\n.recommended-product1 {\n  display: grid !important;\n  grid-template-columns: 84px 1fr;\n  gap: 16px;\n  align-items: center;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 16px;\n}\n\n/* Left image */\n.recommended-product1 .image-wrapper1 {\n  width: 84px;\n  height: 84px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n.recommended-product1 .image-wrapper1 img {\n  width: 72px;\n  height: 72px;\n  object-fit: contain;\n}\n\n/* Middle: series, title, variant dropdown */\n.rp-middle {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.rp-series {\n  font-family: 'Canela-bold', serif;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.rp-title {\n  font-size: 15px;\n  line-height: 1.4;\n  margin: 0;\n}\n\n.rp-form { /* this is the actual <form> inside <product-form> */\n  display: flex !important;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n}\n\n/* Keep original radios (for theme JS), but hide them */\n.rp-form .variant-radios {\n  display: none !important;\n}\n\n/* Dropdown look (like your screenshot) */\n.rp-form .variant-select {\n  min-width: 120px;\n  padding: 6px 28px 6px 10px;\n  border: 1px solid #000;\n  border-radius: 0px;\n  background: #fff;\n  appearance: none;\n  position: relative;\n}\n\n/* Add-to-cart button on the right with price inside */\n.rp-form .add-to-cart {\n  margin-left: auto;\n  background: #222;\n  color: #fff;\n  border: 0;\n  padding: 9px 16px;\n  font-size: 14px;\n  border-radius: 0px;\n  cursor: pointer;\n  white-space: nowrap;\nwidth:6rem;\n}\n.rp-form .add-to-cart[disabled] { background: grey; }\n\n/* Hide the old standalone price line (we keep it for JS/compat) */\n\n\n@media (max-width: 640px) {\n  .recommended-product {\n    grid-template-columns: 64px 1fr;\n  }\n  .recommended-product .image-wrapper { width: 64px; height: 64px; }\n  .recommended-product .image-wrapper img { width: 56px; height: 56px; }\n}\n\n    .no-list li {\n      margin: 6px 0;\n      padding-left: 30px;\n      position: relative;\n    }\n\n    .no-list li::before {\n      content: \"X\";\nfont-weight:bold;\n      position: absolute;\n      left: 0;\n      color: #000;\n      font-size: 1.0em;\n    }\n  .clp-wrap {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n  /* .clp-grid{display:grid;grid-template-columns:1fr 1fr;gap:28px} */\n  .add-to-cart-btn {\n    display: block;\n    width: 100%;\n    max-width: 250px;\n    margin: 0 0 20px;\n    padding: 12px 20px;\n    background-color: #000;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n    transition: 150ms ease-in;\n    margin-top: 10px;\n  }\n  .add-to-cart-btn:hover {\n    background-color: #fff;\n    color: #000;\n  }\n  @media (max-width: 990px) {\n    .clp-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n  /* Gallery */\n  .clp-main {\n    width: 100%;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    overflow: hidden;\n  }\n  .clp-main img,\n  .clp-main video {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumbs {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    margin-top: 12px;\n  }\n  .clp-thumb {\n    width: 80px;\n    border: 1px solid #eee;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n    background: #fff;\n    padding: 0;\n  }\n  .clp-thumb img {\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n  .clp-thumb.is-active {\n    outline: 2px solid #111;\n  }\n\n  /* Right column */\n  .clp-title {\n    font-size: 26px;\n    margin: 0 0 6px;\n  }\n  .clp-price {\n    font-size: 22px;\n    margin: 12px 0;\n  }\n  .clp-price s {\n    margin-left: 8px;\n    color: #777;\n    font-size: 18px;\n  }\n  .clp-options {\n    margin-top: 10px;\n  }\n  .clp-option {\n    margin-bottom: 12px;\n  }\n  .clp-option legend {\n    font-weight: 600;\n    margin-bottom: 6px;\n  }\n  .clp-option label {\n    display: inline-block;\n    margin: 0 10px 6px 0;\n    cursor: pointer;\n  }\n  .clp-option input {\n    margin-right: 6px;\n  }\n\n  /* Qty + ATC */\n  .clp-atc-row {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-top: 12px;\n  }\n  .clp-qty {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ddd;\n    border-radius: 10px;\n    overflow: hidden;\n  }\n  .clp-qty button {\n    background: #fff;\n    border: 0;\n    padding: 10px 12px;\n    cursor: pointer;\n  }\n  .clp-qty input {\n    width: 56px;\n    text-align: center;\n    border: 0;\n  }\n  .clp-atc {\n    flex: 1;\n    padding: 14px;\n    border: 0;\n    border-radius: 10px;\n    background: #111;\n    color: #fff;\n    cursor: pointer;\n  }\n  .clp-atc[disabled] {\n    opacity: .5;\n    cursor: not-allowed;\n  }\n\n  /* FAQ (native <details>) */\n  .clp-accordion {\n    margin-top: 20px;\n  }\n  .clp-accordion details:first-child {\n    border-top: none;\n  }\n  .clp-accordion details {\n    border-top: 1px solid #eee;\n  }\n  .clp-accordion details:last-child {\n    border-bottom: 1px solid #eee;\n  }\n  .clp-accordion summary {\n    list-style: none;\n    cursor: pointer;\n    padding: 14px 0;\n    font-size: 16px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .clp-accordion summary::-webkit-details-marker {\n    display: none;\n  }\n.clp-accordion summary {\n  position: relative; /* This is crucial for positioning the pseudo-element */\n}\n  .clp-accordion summary::after {\n  content: \"+\";\n  font-weight: bold;\n  position: absolute; /* Position the plus relative to the summary element */\n  top: 50%;\n  left: 100%;\n  transform: translate(-50%, -50%); /* This centers the plus sign perfectly */\n  padding: 5px; /* Add padding to create the gap */\n  width: 1em;\n  height: 1em;\n  border: 1px solid black;\n  border-radius: 50%;\n  line-height: 1em; /* Adjust line-height to center the text */\n  text-align: center;\n  }\n  .clp-accordion details[open] summary::after {\n    content: \"−\";\n  }\n  .clp-acc-content {\n    padding: 0 0 14px;\n    color: #444;\n  }\n\n  {% comment %} new one {% endcomment %}\n  .custom-product-page {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 40px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n\n  /* Slider */\n  .product-media .slider-wrapper {\n    position: relative;\n    overflow: hidden;\n  }\n  .slider {\n    display: flex;\n    transition: transform 0.4s ease-in-out;\n  }\n  .slide {\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  .slide img,\n  .slide video {\n    width: 100%;\n    border: 0px solid #ddd;\n    /* border-radius: 6px; */\n  }\n  .slider-btn {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0,0,0,0.5);\n    color: #fff;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    z-index: 2;\n  }\n  .slider-btn.prev { left: 10px; }\n  .slider-btn.next { right: 10px; }\n\n  /* Thumbnails */\n  .thumbnail-row {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n    flex-wrap: wrap;\n  }\n  .thumbnail {\n    width: 80px;\n    height: 80px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    overflow: hidden;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .thumbnail img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  .video-thumb {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f5f5f5;\n    font-size: 20px;\n  }\n\n  /* Responsive */\n  @media (max-width: 768px) {\n    .custom-product-page { grid-template-columns: 1fr; }\n  }\n  {% comment %} new one finish {% endcomment %}\n</style>\n\n{% assign btnCheck = true %}\n<div class=\"clp-wrap\" data-product-handle=\"{{ product.handle }}\">\n  <div class=\"clp-grid\">\n    <!-- LEFT: Gallery -->\n    <!--\n    <div class=\"clp-gallery\">\n      <div class=\"clp-main\" id=\"clpMain\">\n        {{ product.featured_media | media_tag: image_size: \"1200x\" }}\n      </div>\n      <div class=\"clp-thumbs\" id=\"clpThumbs\">\n        {% for m in product.media %}\n          <button class=\"clp-thumb{% if forloop.first %} is-active{% endif %}\" type=\"button\" data-tpl=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"200x\" }}\n          </button>\n          <template id=\"clp-tpl-{{ m.id }}\">\n            {{ m | media_tag: image_size: \"1200x\" }}\n          </template>\n        {% endfor %}\n      </div>\n    </div>\n    -->\n\n    <div class=\"custom-product-page\">\n      <!-- LEFT SIDE: Product Media Slider -->\n      <div class=\"product-media\">\n        <div class=\"slider-wrapper\">\n          <button class=\"slider-btn prev\">&#10094;</button>\n          <div class=\"slider\" id=\"productSlider\">\n            {% for media in product.media %}\n              <div class=\"slide\">\n                {{ media | media_tag: image_size: \"800x\", autoplay: false, loop: false, controls: true }}\n              </div>\n            {% endfor %}\n          </div>\n          <button class=\"slider-btn next\">&#10095;</button>\n        </div>\n        <!-- Thumbnails -->\n        <div class=\"thumbnail-row\" id=\"thumbnailRow\">\n          {% for media in product.media %}\n            <div class=\"thumbnail\" onclick=\"goToSlide({{ forloop.index0 }})\">\n              {% if media.media_type == 'image' %}\n                <img src=\"{{ media | image_url: width: 150 }}\" alt=\"{{ product.title }}\">\n              {% elsif media.media_type == 'video' %}\n                <div class=\"video-thumb\">▶</div>\n              {% endif %}\n            </div>\n          {% endfor %}\n        </div>\n      </div>\n\n      <!-- RIGHT: Details -->\n      <div class=\"clp-details\">\n<h1>{{- product.metafields.custom.series.value.letter -}}-{{ product.metafields.custom.series_number }}</h1>\n        <h1 class=\"clp-title\">{{ product.title }}</h1>\n\n\n\n        <!-- Product Review Code Start -->\n\n{% assign rating_json = product.metafields.reviews.rating %}\n{% assign parts = rating_json | split: ',' %}\n{% assign value_part = parts[2] %}\n{% assign value_split = value_part | split: ':' %}\n{% assign avg_rating_string = value_split[1] | strip | replace: '\"', '' %}\n{% assign avg_rating = avg_rating_string | times: 1 %}\n{% assign review_count = product.metafields.reviews.rating_count %}\n\n{% if avg_rating %}\n  <div class=\"product-rating\">\n    {% assign rounded_down_rating = avg_rating | floor %}\n    {% assign decimal_part = avg_rating | minus: rounded_down_rating %}\n    {% assign next_star = rounded_down_rating | plus: 1 %}\n\n    {% for i in (1..5) %}\n      {% if i <= rounded_down_rating %}\n        <span class=\"star filled\">★</span>\n      {% elsif i == next_star and decimal_part >= 0.5 %}\n        <span class=\"star half-filled\">★</span>\n      {% else %}\n        <span class=\"star\">☆</span>\n      {% endif %}\n    {% endfor %}\n\n    {% if review_count > 0 %}\n      <a href=\"#\" class=\"review-count-link body-r\" data-target-class=\"jdgm-rev-widg__body\">\n      <span class=\"review-count\">({{ review_count }}) View all</span></a>\n    {% endif %}\n  </div>\n{% endif %}\n\n        <!-- Product review code end -->\n\n\n\n<p style=\"padding-top: 10px;\">{{ product.description }}</p>\n        <!-- Live price this one is for sale\n          <div class=\"clp-price\">\n        <span id=\"clpPrice\">{{ current_variant.price | money }}</span>\n        <s id=\"clpCompare\" {% unless current_variant.compare_at_price > current_variant.price %}style=\"display:none\"{% endunless %}>\n          {{ current_variant.compare_at_price | money }}\n        </s>\n      </div>. -->\n\n\n<p class=\"product-price\" id=\"product-price\" style=\"margin-bottom: 20px;\">\n      {{ product.variants.first.price | money }}\n    </p> \n\n        <!-- Variants as radios -->\n        <!-- Qty + ATC -->\n        {%- assign product_form_id = 'product-form-' | append: section.id -%}\n       \n\n        <product-form class=\"block mediumMax:w-full medium:relative\">\n          {%- form 'product',\n            product,\n            id: product_form_id,\n            class: 'form',\n            novalidate: 'novalidate',\n            data-type: 'add-to-cart-form'\n          -%}\n            {% if product.variants.size > 1 %}\n              <input type=\"hidden\" name=\"id\" id=\"variant-id\" value=\"{{  product.variants.first.id }}\" disabled>\n              <div class=\"product-variants\">\n                {% for variant in product.variants %}\n                  <label class=\"variant-option\">\n                    <input\n                      type=\"radio\"\n                      name=\"id\"\n                      value=\"{{ variant.id }}\"\n                      data-price=\"{{ variant.price | money }}\"\n                      data-available=\"{{ variant.available }}\"\n                      {% if forloop.first %} checked {% endif %}\n                    >\n                    {{ variant.title }}\n                  </label>\n                {% endfor %}\n              </div>\n            {% else %}\n              <div class=\"product-variants\">\n                <label class=\"variant-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"id\"\n                    value=\"{{  product.variants.first.id }}\"\n                    data-price=\"{{ product.variants.price | money }}\"\n                    data-available=\"{{ product.variants.first.available }}\"\n                    checked\n                  >\n                  {{ product.variants.first.title }}\n                </label>\n                {% liquid\n                  assign btnCheck = product.variants.first.available\n                  assign preorder = false\n                  for tag in product.tags\n                    if tag contains 'preorder'\n                      assign preorder = true\n                    endif\n                  endfor\n                %}\n              </div>\n            {% endif %}\n\n            <div class=\"flex gap-x-2 items-center\">\n              {% if btnCheck %}\n\n {%- unless product.available == false -%}\n          <div class=\"js-quick-add-context-quantity-input\">\n            <label class=\"sr-only\" for=\"Quantity-{{ section.id }}\">\n              {{ 'products.product.quantity.label' | t }}\n            </label>\n            <quantity-input class=\"quantity quantity--pdp\" style=\"height: 2.5rem; margin-top: -10px; background-color:white; border:1px solid black;\">\n              <button class=\"quantity__button qty-btn decrease\" name=\"minus\" type=\"button\">\n                <span class=\"sr-only\">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>\n                {% render 'icon-minus' %}\n              </button>\n              <input class=\"quantity__input\"\n                type=\"number\"\n                name=\"quantity\"\n                id=\"Quantity-{{ section.id }}\"\n                min=\"1\"\n                value=\"1\"\n                form=\"{{ product_form_id }}\"\n              >\n              <button class=\"quantity__button qty-btn increase\" name=\"plus\" type=\"button\">\n                <span class=\"sr-only\">\n                  {{ 'products.product.quantity.increase' | t: product: product.title | escape }}\n                </span>\n                {% render 'icon-plus' %}\n              </button>\n            </quantity-input>\n          </div>\n        {%- endunless -%}\n\n                <button\n                  type=\"submit\"\n                  name=\"add\"\n                  id=\"add-to-cart-bt\"\n                  class=\"button w-full justify-center medium:w-[6.875rem] medium:py-[.75rem] medium:button--small js-quick-add-context-submit add-to-cart-btn loading-overlay__spinner\"\n                >\n                  <div class=\"labell\">\n                    <span>\n                      {{ 'products.product.add_to_cart' | t }}\n                    </span>\n                  </div>\n                </button>\n              {% else %}\n                {% if preorder == true %}\n                  <button\n                    class=\"my-button-klaviyo-abc add-to-cart-btn\"\n                    id=\"my-button-klaviyo\"\n                  >\n                    <div class=\"out-of-stock\">\n                      <span> Sold Out <br> Pre Order Now</span>\n                    </div>\n                  </button>\n                {% else %}\n                  <button\n                    class=\"button w-full add-to-cart-btn\"\n                    disabled\n                  >\n                    <div class=\"out-of-stock-btn\">\n                      <span>Out of Stock</span>\n                    </div>\n                  </button>\n                {% endif %}\n              {% endif %}\n            </div>\n          {%- endform -%}\n\n          <div\n            class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n            role=\"alert\"\n            hidden\n          >\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n              <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n              <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n              <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\">\n            </svg>\n            <span class=\"product-form__error-message\"></span>\n          </div>\n        </product-form>\n<hr style=\"border-top: 2px solid black\">\n        <!-- FAQ Tabs -->\n        <div class=\"clp-accordion\" id=\"clpAccordion\">\n          <details>\n            <summary>Product Details</summary>\n            <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_2 | metafield_tag }}</div>\n          </details>\n          {% if product.metafields.custom.rich_b_1 != blank %}\n            <details>\n              <summary>Key Ingredients</summary>\n              <div class=\"clp-acc-content\">{{ product.metafields.custom.rich_b_1 | metafield_tag }}</div>\n            </details>\n            {% endif %}\n\n<details>\n  <summary>Formulated without</summary>\n<p>\n<strong>Tursian</strong> is where science meets responsibility. Every ingredient is chosen not just for efficacy, but for purity, safety and skin compatibility. Our commitment to clean clinical formulation means we say <span class=\"highlight\">NO</span> to:\n</p>\n\n    <ul class=\"no-list\" style=\"font-family:MYRIADPRO-REGULAR !important;  \">\n      <li>Parabens</li>\n      <li>Phthalates</li>\n      <li>Sulfates (SLS/SLES)</li>\n      <li>Formaldehyde & Formaldehyde Releasers</li>\n      <li>Mineral Oil & Petrolatum</li>\n      <li>Silicones (non-biodegradable)</li>\n      <li>Drying Alcohols</li>\n      <li>Synthetic Fragrance (in leave-on products)</li>\n      <li>Chemical Sunscreens (e.g., Oxybenzone, Octinoxate)</li>\n      <li>PEGs and Ethoxylated Ingredients</li>\n      <li>Phenoxyethanol (restricted below global safety thresholds)</li>\n      <li>Animal-Derived Ingredients (100% vegan)</li>\n      <li>Microplastics & Non-biodegradable polymers</li>\n      <li>Artificial colors</li>\n      <li>GMO </li>\n      <li>Gluten</li>\n      <li>Soy</li>\n    </ul>\n\n\n</details>  <!-- FIX: closed properly -->\n\n{% if product.metafields.custom.clinical_json != blank %}\n  <details>\n    <summary>Clinical studies</summary>\n    {% assign metafield = product.metafields.custom.clinical_json.value | parse_json %}\n    {% if metafield.features %}\n      <div class=\"grid-featuress\">\n        {% for feature in metafield.features %}\n          <div class=\"grid-features-layout\">\n            <span class=\"span-non-bold\">{{ feature.name }}</span>\n            <div style=\"display:flex; justify-content:center; align-items:center;\">\n              <span class=\"span-bold\" style=\"font-size:27px; font-weight:bold; margin-right:3px;\">{{ feature.figure_one }}</span>\n              <span class=\"span-non-bold-two\">{{ feature.description }}</span>\n            </div>\n            <span class=\"span-bold-two\" style=\"font-size:27px; font-weight:bold;\">{{ feature.figure_two }}</span>\n          </div>\n        {% endfor %}\n      </div>\n    {% endif %}\n  </details>\n{% endif %}\n\n\n          \n\n          {% if product.metafields.custom.direction_of_use != blank %}\n            <details>\n              <summary>How to Use</summary>\n              <div class=\"clp-acc-content\">\n        <iframe\n          id=\"iframe_video\"\n          width=\"560\"\n          height=\"315\"\n          src=\"{{ product.metafields.custom.duseurl }}\"\n          frameborder=\"0\"\n          allowfullscreen\n        ></iframe>\n        <p id=\"p_duse\">\n          {{ product.metafields.custom.direction_of_use | metafield_tag }}\n        </p>\n              </div>\n            </details>\n          {% endif %}\n\n\n\n\n          {% if product.metafields.custom.ingredient_b_1 != blank %}\n            <details>\n              <summary>Full Ingredients List</summary>\n              <div class=\"clp-acc-content\">\n              {{ product.metafields.custom.ingredient_b_1 | metafield_tag }}\n              </div>\n            </details>\n          {% endif %}\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n{% assign recommended_products = \"\" %}\n{% assign xyz=\"y3,p2,y2,r3\" %}\n{% assign related_tags = xyz| split: \",\" %}\n\n{% for tag in related_tags %}\n  {% for product in collections.all.products %}\n    {% if product.tags contains tag %}\n      {% assign recommended_products = recommended_products | append: product.handle | append: \",\" %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n\n{% assign recommended_products = recommended_products | split: \",\" | uniq %}\n\n{% if recommended_products.size > 0 %}\n  <h3 style=\"margin-bottom: 12px; margin-top:20px;\">Pairs well with:</h3>\n\n  <div class=\"recommended-products1\">\n    {% for handle in recommended_products limit: 6 %}\n      {% assign product = all_products[handle] %}\n      <div class=\"recommended-product1\">\n\n        <!-- LEFT: product image -->\n        <div class=\"image-wrapper1\">\n          {% if product.featured_image %}\n            <img src=\"{{ product.featured_image | img_url: '150x' }}\" alt=\"{{ product.title }}\">\n          {% endif %}\n        </div>\n\n        <!-- RIGHT: content (series + title + form with dropdown & button) -->\n        <div class=\"rp-middle\">\n          {% if product.metafields.custom.series.value.letter and product.metafields.custom.series_number %}\n            <div class=\"rp-series\">{{ product.metafields.custom.series.value.letter }}-{{ product.metafields.custom.series_number }}</div>\n          {% endif %}\n          <p class=\"rp-title\">{{ product.title }}</p>\n\n          <!-- IMPORTANT: Keep your original product form EXACTLY so AJAX + drawer work -->\n          <product-form>\n            {%- form 'product',\n              product,\n              id: stickyATCCTAFormID,\n              class: 'form rp-form',\n              novalidate: 'novalidate',\n              data-type: 'add-to-cart-form'\n            -%}\n              <!-- Hidden variant id (Shopify requires this) -->\n              <input type=\"hidden\" name=\"id\" id=\"variant-id-{{ product.id }}\" value=\"{{ product.variants.first.id }}\">\n\n              <!-- Keep ORIGINAL radios (hidden) so any theme JS stays happy -->\n              <div class=\"variant-radios\" style=\"accent-color:#000;\">\n                {% for variant in product.variants %}\n                  <input\n                    type=\"radio\"\n                    id=\"variant-{{ product.id }}-{{ variant.id }}\"\n                    name=\"variant-{{ product.id }}\"\n                    value=\"{{ variant.id }}\"\n                    {% if forloop.first %}checked{% endif %}\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    onchange=\"updateVariant({{ product.id }}, this)\">\n                  <label for=\"variant-{{ product.id }}-{{ variant.id }}\">{{ variant.title }}</label>\n                {% endfor %}\n              </div>\n\n              <!-- Visible dropdown that syncs with the radios above -->\n              <select class=\"variant-select\" onchange=\"syncSelectToRadios({{ product.id }}, this)\">\n                {% for variant in product.variants %}\n                  <option\n                    value=\"{{ variant.id }}\"\n                    data-price=\"{{ variant.price }}\"\n                    data-available=\"{{ variant.available }}\"\n                    {% if forloop.first %}selected{% endif %}>\n                    {{ variant.title }}\n                  </option>\n                {% endfor %}\n              </select>\n\n              <!-- Keep price node for your original JS (hidden via CSS) -->\n              <p id=\"product-price-{{ product.id }}\" class=\"product-price\" style=\"display: none;\">\n                {{ product.variants.first.price | money }}\n              </p>\n\n              <!-- The SAME button/classes you had: AJAX add + opens drawer -->\n              <button type=\"submit\"\n                      id=\"add-to-cart-btn-{{ product.id }}\"\n                      class=\"add-to-cart js-quick-add-context-submit loading-overlay__spinner\"\n                      data-open-drawer=\"true\"\n                      {% unless product.variants.first.available %}disabled style=\"background-color:grey;\"{% endunless %}>\n                Add - {{ product.variants.first.price | money }}\n              </button>\n            {%- endform -%}\n\n            <!-- Keep your original error wrapper -->\n            <div\n              class=\"product-form__error-message-wrapper medium:absolute medium:right-0 medium:top-[calc(100%_-_0.625rem)] medium:w-max large:top-[calc(100%_-_7.6825rem)]\"\n              role=\"alert\"\n              hidden>\n              <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-error\" viewBox=\"0 0 13 13\">\n                <circle cx=\"6.5\" cy=\"6.50049\" r=\"5.5\" stroke=\"white\" stroke-width=\"2\"/>\n                <circle cx=\"6.5\" cy=\"6.5\" r=\"5.5\" fill=\"#EB001B\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n                <path d=\"M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z\" fill=\"white\"/>\n                <path d=\"M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z\" fill=\"white\" stroke=\"#EB001B\" stroke-width=\"0.7\"/>\n              </svg>\n              <span class=\"product-form__error-message\"></span>\n            </div>\n          </product-form>\n        </div>\n      </div>\n    {% endfor %}\n  </div>\n{% else %}\n  <p></p>\n{% endif %}\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const qtyInput = document.getElementById(\"Quantity-{{ section.id }}\");\n    const decreaseBtn = document.querySelector(\".qty-btn.decrease\");\n    const increaseBtn = document.querySelector(\".qty-btn.increase\");\n\n    if (qtyInput && decreaseBtn && increaseBtn) {\n      decreaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        if (current > 1) qtyInput.value = current - 1;\n      });\n      increaseBtn.addEventListener(\"click\", () => {\n        let current = parseInt(qtyInput.value) || 1;\n        qtyInput.value = current + 1;\n      });\n    }\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const variantOptions = document.querySelectorAll('input[name=\"id\"]');\n    const outOfStockSpan = document.querySelectorAll('out-of-stock-btn');\n    const variantIdInput = document.getElementById(\"variant-id\");\n    const productPrice = document.getElementById(\"product-price\");\n    const addToCartBtn = document.getElementById(\"add-to-cart-bt\");\n\n    function updateButtonState(selectedVariant) {\n      const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n      if (!isAvailable) {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Out of Stock\";\n        });\n      } else {\n        addToCartBtn.disabled = !isAvailable;\n        const spans = document.querySelectorAll(\".labell span\");\n        spans.forEach(span => {\n          span.textContent = \"Add to Bag\";\n        });\n      }\n    }\n\n    if (variantOptions.length > 0) {\n      const defaultVariant = document.querySelector('input[name=\"id\"]:checked');\n      if (defaultVariant) {\n        variantIdInput.value = defaultVariant.value;\n        productPrice.textContent = defaultVariant.getAttribute(\"data-price\");\n        updateButtonState(defaultVariant);\n      }\n      variantOptions.forEach((option) => {\n        option.addEventListener(\"change\", function () {\n          const selectedVariant = this;\n          const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n          variantIdInput.value = selectedVariant.value;\n          productPrice.textContent = selectedPrice;\n          updateButtonState(selectedVariant);\n        });\n      });\n    }\n  });\n\n  (function(){\n    document.querySelectorAll('.clp-wrap').forEach(function(root){\n      /* ---------- Gallery (no external views required) ---------- */\n      const main = root.querySelector('#clpMain');\n      root.querySelectorAll('#clpThumbs .clp-thumb').forEach(function(btn){\n        btn.addEventListener('click', function(){\n          root.querySelectorAll('#clpThumbs .clp-thumb').forEach(b=>b.classList.remove('is-active'));\n          btn.classList.add('is-active');\n          const tpl = root.querySelector('#'+btn.dataset.tpl);\n          if(tpl){ main.innerHTML = tpl.innerHTML; }\n          main.scrollIntoView({behavior:'smooth', block:'nearest'});\n        });\n      });\n\n      /* ---------- Quantity ---------- */\n      const qty = root.querySelector('#clpQty');\n      root.querySelector('#clpMinus').onclick = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)-1)); };\n      root.querySelector('#clpPlus').onclick  = ()=>{ qty.value=Math.max(1,(parseInt(qty.value||'1',10)+1)); };\n\n      /* ---------- Variants ---------- */\n      const variants = {{ product.variants | json }};\n      const hasDefault = {{ product.has_only_default_variant | json }};\n      const priceEl = root.querySelector('#clpPrice');\n      const compareEl = root.querySelector('#clpCompare');\n      let currentVariantId = {{ current_variant.id }};\n\n      function getSelectedVariant(){\n        if(hasDefault) return variants[0];\n        const selected = [];\n        {% for option in product.options_with_values %}\n          selected[{{ option.position | minus: 1 }}] =\n            root.querySelector('input[name=\"option-{{ option.position }}\"]:checked')?.value;\n        {% endfor %}\n        return variants.find(v => v.options.every((opt,i)=>opt===selected[i])) || variants.find(v=>v.id==currentVariantId);\n      }\n\n      function updatePrice(v){\n        if(!v) return;\n        currentVariantId = v.id;\n        try{\n          priceEl.textContent = Shopify.formatMoney(v.price, {{ shop.money_format | json }});\n        }catch(_){\n          priceEl.textContent = (v.price/100).toFixed(2);\n        }\n        if(v.compare_at_price && v.compare_at_price > v.price){\n          compareEl.style.display='inline';\n          try{\n            compareEl.textContent = Shopify.formatMoney(v.compare_at_price, {{ shop.money_format | json }});\n          }catch(_){\n            compareEl.textContent = (v.compare_at_price/100).toFixed(2);\n          }\n        } else {\n          compareEl.style.display='none';\n        }\n        root.querySelector('#clpATC').disabled = !v.available;\n      }\n\n      root.querySelectorAll('input[name^=\"option-\"]').forEach(function(r){\n        r.addEventListener('change', ()=> updatePrice(getSelectedVariant()));\n      });\n\n      /* ---------- Add to Cart (AJAX + open Dawn drawer) ---------- */\n      const atc = root.querySelector('#clpATC');\n      atc.addEventListener('click', async ()=>{\n        const v = getSelectedVariant();\n        if(!v){ alert('Please select an option.'); return; }\n        const quantity = Math.max(1, parseInt(qty.value||'1',10));\n\n        atc.disabled=true; atc.textContent='Adding...';\n        try{\n          const addRes = await fetch('/cart/add.js',{\n            method:'POST',\n            headers:{'Content-Type':'application/json','Accept':'application/json'},\n            body: JSON.stringify({id: v.id, quantity})\n          });\n          if(!addRes.ok) throw new Error('Add failed');\n\n          const sections = 'cart-drawer,cart-icon-bubble';\n          const secRes = await fetch(`/?sections=${sections}`);\n          if(secRes.ok){\n            const html = await secRes.json();\n\n            const bubbleTarget = document.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n            if(html['cart-icon-bubble'] && bubbleTarget){\n              const tmp = document.createElement('div'); tmp.innerHTML = html['cart-icon-bubble'];\n              const fresh = tmp.querySelector('[id^=\"cart-icon-bubble\"], .cart-count-bubble');\n              if(fresh) bubbleTarget.replaceWith(fresh);\n            }\n\n            const existingDrawer = document.querySelector('cart-drawer');\n            if(existingDrawer && html['cart-drawer']){\n              const tmp2 = document.createElement('div'); tmp2.innerHTML = html['cart-drawer'];\n              const freshDrawer = tmp2.querySelector('cart-drawer');\n              if(freshDrawer) existingDrawer.replaceWith(freshDrawer);\n              const dialog = document.getElementById('CartDrawer') || document.querySelector('cart-drawer');\n              dialog?.classList?.add('is-open');\n              document.body.classList.add('overflow-hidden');\n            } else {\n              (document.querySelector('[aria-controls=\"CartDrawer\"],[data-drawer-trigger],button[name=\"open-drawer\"],a[href=\"#CartDrawer\"]'))?.click();\n            }\n          }\n        }catch(e){\n          console.error(e);\n          alert('Sorry, could not add to cart.');\n        }finally{\n          atc.disabled=false; atc.textContent='Add to cart';\n        }\n      });\n\n      updatePrice(getSelectedVariant());\n    });\n  })();\n\n  //new one\n  function updateQty(change) {\n    let qtyInput = document.getElementById(\"quantityInput\");\n    let newQty = parseInt(qtyInput.value) + change;\n    if (newQty > 0) qtyInput.value = newQty;\n  }\n\n  /* FAQ */\n  function toggleFaq(element) {\n    element.parentElement.classList.toggle(\"active\");\n  }\n\n  /* Slider with Thumbnails */\n  let currentSlide = 0;\n  function moveSlide(direction) {\n    const slider = document.getElementById(\"productSlider\");\n    const slides = slider.children.length;\n    currentSlide = (currentSlide + direction + slides) % slides;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  function goToSlide(index) {\n    const slider = document.getElementById(\"productSlider\");\n    currentSlide = index;\n    slider.style.transform = `translateX(-${currentSlide * 100}%)`;\n  }\n  // new one end\n</script>\n\n<script>\n/* Keep your original code — just add one helper to sync the dropdown to the radios */\n\n/* When dropdown changes, tick the corresponding (hidden) radio + reuse your original updateVariant() */\nfunction syncSelectToRadios(productId, selectEl) {\n  const variantId = selectEl.value;\n  const radio = document.getElementById(`variant-${productId}-${variantId}`);\n  if (radio) {\n    radio.checked = true;\n    // Reuse your existing logic (updates hidden input, price text, and button state)\n    updateVariant(productId, radio);\n  }\n}\n\n/* Your ORIGINAL script (unchanged) */\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const variantOptions = document.querySelectorAll('input[name^=\"variant-\"]');\n\n  function updateButtonState(productId, selectedVariant) {\n    const isAvailable = selectedVariant.getAttribute(\"data-available\") === \"true\";\n    const addToCartBtn = document.getElementById(\"add-to-cart-btn-\" + productId);\n    if (!isAvailable) {\n      addToCartBtn.disabled = true;\n      addToCartBtn.textContent = \"Out of Stock\";\n      addToCartBtn.style.backgroundColor = \"grey\";\n    } else {\n      addToCartBtn.disabled = false;\n      addToCartBtn.textContent = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedVariant.getAttribute(\"data-price\") / 100);\n      addToCartBtn.style.backgroundColor = \"black\";\n    }\n  }\n\n  document.querySelectorAll('.recommended-product').forEach((productElement) => {\n    const productId = productElement.querySelector('input[name=\"id\"]').id.split('-').pop();\n    const defaultVariant = productElement.querySelector(`input[name=\"variant-${productId}\"]:checked`);\n    const variantIdInput = document.getElementById(`variant-id-${productId}`);\n    const productPrice = document.getElementById(`product-price-${productId}`);\n\n    if (defaultVariant) {\n      variantIdInput.value = defaultVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(defaultVariant.getAttribute(\"data-price\") / 100);\n      updateButtonState(productId, defaultVariant);\n\n      /* Also sync the visible dropdown to the default radio */\n      const selectEl = productElement.querySelector('select.variant-select');\n      if (selectEl) selectEl.value = defaultVariant.value;\n    }\n  });\n\n  variantOptions.forEach((option) => {\n    option.addEventListener(\"change\", function () {\n      const productId = this.name.split('-').pop();\n      const selectedVariant = this;\n      const selectedPrice = selectedVariant.getAttribute(\"data-price\");\n      const variantIdInput = document.getElementById(`variant-id-${productId}`);\n      const productPrice = document.getElementById(`product-price-${productId}`);\n\n      variantIdInput.value = selectedVariant.value;\n      productPrice.textContent = new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(selectedPrice / 100);\n      updateButtonState(productId, selectedVariant);\n\n      /* Keep dropdown in sync if user somehow changed radios */\n      const selectEl = document.querySelector(`.recommended-product select.variant-select[id=\"variant-${productId}\"]`) || document.querySelector(`.recommended-product select.variant-select`);\n      const middleWrap = selectedVariant.closest('.recommended-product');\n      if (middleWrap) {\n        const sel = middleWrap.querySelector('select.variant-select');\n        if (sel) sel.value = selectedVariant.value;\n      }\n    });\n  });\n});\n\n/* Your ORIGINAL function — unchanged */\nfunction updateVariant(productId, inputElement) {\n  let variantId = inputElement.value;\n  let variantPrice = inputElement.getAttribute(\"data-price\");\n  let available = inputElement.getAttribute(\"data-available\") === \"true\";\n\n  document.getElementById(\"variant-id-\" + productId).value = variantId;\n\n  document.getElementById(\"product-price-\" + productId).innerText = new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  }).format(variantPrice / 100);\n\n  let button = document.getElementById(\"add-to-cart-btn-\" + productId);\n  if (available) {\n    button.disabled = false;\n    button.innerText = \"Add - \" + new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(variantPrice / 100);\n    button.style.backgroundColor = \"black\";\n  } else {\n    button.disabled = true;\n    button.innerText = \"Out of Stock\";\n    button.style.backgroundColor = \"grey\";\n  }\n}\n</script>\n\n<!-- Slider: robust bindings (works even if inline onclick is blocked) -->\n<script>\ndocument.addEventListener('DOMContentLoaded', function () {\n  const slider = document.getElementById('productSlider');\n  if (!slider) return;\n\n  const slides = Array.from(slider.querySelectorAll('.slide'));\n  const prevBtn = document.querySelector('.slider-btn.prev');\n  const nextBtn = document.querySelector('.slider-btn.next');\n  const thumbs = Array.from(document.querySelectorAll('#thumbnailRow .thumbnail'));\n  let current = 0;\n\n  function update() {\n    slider.style.transform = 'translateX(-' + (current * 100) + '%)';\n    // optional: keep thumbnails in sync\n    thumbs.forEach((t,i) => t.classList.toggle('is-active', i === current));\n    // pause other videos so audio doesn’t overlap\n    slides.forEach((s,i) => {\n      const v = s.querySelector('video');\n      if (v && i !== current) { try { v.pause(); } catch(e){} }\n    });\n  }\n  function goTo(i) {\n    if (!slides.length) return;\n    current = (i + slides.length) % slides.length;\n    update();\n  }\n  function moveBy(step) { goTo(current + step); }\n\n  // Bind clicks (works even if inline onclick is disabled by CSP)\n  prevBtn && prevBtn.addEventListener('click', e => { e.preventDefault(); moveBy(-1); });\n  nextBtn && nextBtn.addEventListener('click', e => { e.preventDefault(); moveBy(1); });\n  thumbs.forEach((t,i) => t.addEventListener('click', e => { e.preventDefault(); goTo(i); }));\n\n  // Expose in case inline handlers are allowed\n  window.moveSlide = moveBy;\n  window.goToSlide = goTo;\n\n  // Initialize\n  update();\n});\n</script>"
      }
    }
  },
  "order": [
    "main",
    "custom_liquid_Ujwa4i",
    "custom_liquid_Xamj8B",
    "custom_liquid_mxDNK7",
    "custom_liquid_CpjjLw",
    "custom_liquid_Radtzf",
    "custom_liquid_V3Www4",
    "custom_liquid_zM4KjT",
    "custom_liquid_iKHkqj",
    "custom_liquid_tnez4r"
  ]
}
