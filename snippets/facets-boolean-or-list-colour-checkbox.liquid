{% comment %}
    Renders 'boolean' or 'list' facets for colour/color (filtering)

    Accepts:
    - idPrefix: {String} DOM `id`
    - context: {String} Rendering context, `mobile` or `desktop`
    - contextForloop: {Object} loop context from the parent
    - filter_type: {String} UI orientation, `vertical` or `horizontal`
    - filter: {Object} Facet data
    - facet_colours: {String} Configuration for colour filtering
{% endcomment %}

<div
    id="{{ idPrefix }}{{ contextForloop.index }}-{{ section.id }}"
    class="{%if context == 'desktop' %}large:relative large:z-10 {% endif %}js-filter"
    data-index="{{ context }}-{{ contextForloop.index }}"
>
    <button
        type="button"
        class="w-full py-4 box-border
            {%- if context == 'desktop' %} large:p-[0.625rem] large:border large:border-uiMidGrey large:rounded-sm large:bg-uiMidGrey large:[&.is-active]:border-uiBlack large:hover:border-uiBlack{% endif %}"
        data-facet-accordion-toggle
        aria-label="{{ filter.label }} ({{ 'products.facets.filters_selected.one' | t: count: filter.active_values.size }})"
    >
        <div class="flex items-center">
            <span class="mr-2 body-r font-semibold
                {%- if context == 'desktop' %} large:text-body-r{% endif %}"
            >
                {{- filter.label | escape -}}
            </span>
            {% if context == 'desktop' and filter.active_values.size > 0 %}
                <div class="flex justify-center items-center mr-2 rounded-full w-5 h-5 text-body-xs text-text2 bg-primary">
                    {{ filter.active_values.size }}
                </div>
            {% endif %}
            <span
                class="flex justify-center items-center ml-auto transition-transform duration-300 transform bg-uiMidGrey w-[1.3rem] h-[1.3rem] [&.is-active]:-scale-y-100                    {%- if context == 'desktop' %} large:w-2 large:[&_svg]:w-full large:[&_svg]:h-auto{% endif %}"
                data-facet-accordion-arrow
            >
                {% render 'icon-caret' %}
            </span>
        </div>
    </button>
    <div
        id="Facet{{ context | capitalize }}-{{ contextForloop.index }}-{{ section.id }}"
        class="h-0 hidden
            {%- if context == 'desktop' %} large:absolute large:top-auto large:left-0 large:box-border large:mt-1 large:py-3 large:px-4 large:border large:border-uiBlack large:rounded-sm large:w-max large:min-w-full large:bg-uiWhite{% endif -%}"
        data-facet-accordion
    >
        <ul class="grid grid-cols-4 gap-2
            {%- if context == 'mobile' %} mb-4{% else %} large:max-w-[17.5rem]{% endif %}"
            role="list"
        >
            {%- for value in filter.values -%}
                <li>
                    <label
                        class="col-span-1 relative flex flex-col items-center box-border py-2 px-3 border rounded-sm h-full cursor-pointer hover:border-primary focus-within:border-primary
                            {%- if value.active %}border-primary{% else %} border-transparent{% endif %}
                            {%- if value.count == 0 and value.active == false %} pointer-events-none opacity-30{% endif %}"
                        for="Filter-{{ filter.label | escape }}-{{ context }}-{{ forloop.index }}">
                        <input
                            id="Filter-{{ filter.label | escape }}-{{ context }}-{{ forloop.index }}"
                            class="peer appearance-none"
                            type="checkbox"
                            name="{{ value.param_name }}"
                            value="{{ value.value }}"
                            {% if value.active %}checked{% endif %}
                            {% if value.count == 0 and value.active == false %}disabled{% endif %}
                        >
                        {% assign colours = '' %}
                        {% for item in facet_colours %}
                            {% assign colours = item | split: ',' %}
                            {% for colour in colours %}
                                {% assign colourData = colour | split: ':'  %}
                                {% assign colourName = colourData[0] %}
                                {% assign colourValue = colourData[1] %}
                                {% if colourName == value.label %}
                                    <svg
                                        class="icon icon-checkmark invisible absolute top-6 left-1/2 -translate-x-1/2 w-3 h-auto stroke-uiWhite [filter:drop-shadow(0_0_0.125rem_theme('colors.uiBlack'))]
                                            {%- if context == 'desktop' %} large:top-[1.1875rem] large:w-2 {% endif %}
                                            peer-checked:visible"
                                        width="1.1rem" height="0.7rem" viewBox="0 0 11 7" fill="none" xmlns="http://www.w3.org/2000/svg"
                                    >
                                        <path d="M1.5 3.5L2.83333 4.75L4.16667 6L9.5 1" stroke-width="1.75" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                    <svg class="border border-uiDarkGrey rounded-full{% if context == 'desktop' %} large:w-7 large:h-7{% endif %}" width="40" height="40" viewBox="0 0 40 40" fill="{{ colourValue }}" xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="20" cy="20" r="20">
                                    </svg>
                                {% endif %}
                            {% endfor %}
                        {% endfor %}
                        <span class="mt-1 text-body-s text-center">
                            {{ value.label | escape }} ({{ value.count }})
                        </span>
                    </label>
                </li>
            {%- endfor -%}
        </ul>
    </div>
</div>
